

// Print Odd number in an array
    
    
(    
    function () {
        let arr = [1, 12, 5, 4, 6,];
        for     (let i = 0; i < arr.length; i++) {
            const element = arr[i];
                if (arr[i] % 2 != 0) {
                    console.log(arr[i]);
                }
        }
        }

)()


// title caps in function

 
    const strArr = ["sra", "mani", "man o", "jeni"];
function toTitCase(str){
return str.replace (/\b\w/g, (match)=> match.toUpperCase());

for (let i =  0; i < strArr.length; i++); {
    
    strArr[i]= toTitCase(strArr[i]) 
}
console.log(strArr);
 

// Sum of an Array
 

function sumArr (number){
    var total = 0;
        for (var i=0 ;i < number.length; ++i) {
            total += number[i];
}
return total    
} 
let numArr1 =[ 1,2,3,45];
var res = sumArr(numArr1);
console.log(` The total of a numArr1 is ${res}`);


// Palindromes in normal function



    var arr = ["racecar", "level", "Hello"];
    var paliArr = [];
    arr.forEach(function(element){
        let reversed = element.split("").reverse().join("");
        if(element=== reversed) {
        paliArr.push(element);
    }
});
console.log(`Palindromes: ${paliArr}`);


// Unique number
        
   
const Arr = [1,2,3,4,5,5,6,6,6 ]; 
const iniqueArr =(function(){  
return Arr.filter(function(item, index){
        return arr.indexOf(item)===index;
      
    })
})();
console.log(iniqueArr);


// Rotated Arrat by K times 

 
  
const rotateArrByK = (arr, k) =>{
    k=k % arr.length; 
    const rotatePart = arr.slice(-k);
    const reminingPart = arr.slice(0, arr.length -k);
    return rotatePart.concat(reminingPart);
};
const myArr = [1,2,3,4,5,6,7];
const k = 2;
const rotatedArr = rotateArrByK(myArr, k);
console.log(`Rotated array is ${rotatedArr}`);

// =====================================

// Arrow function
// Oddnumers with Arrow
        
  
let nubArr = [1,5,6,74,65,8,5,65,5];
let oddNum = nubArr.filter((nubArr)=> nubArr % 2 !==0);
console.log(oddNum);



let strgArrs = ["Vanakkam nanba", "hello friend"];
let titelCap = strgArrs.map((strgArr) => {
    return strgArr
        .toLowerCase()
        .split("")
        .map    ((word) => {
            return word.charAt[0]
            .toUpperCase() + word.slice(1);
        })
        .join(" ")
});
console.log(titelCap);



// Sum of an array  i n  Arrow 
   
const arr = [1,3,4,5,6,67,6];
const sum = arr.reduce((acc,crtVal)=>{
    return acc + crtVal;
});
console.log(sum);

// palindromes in an array


const isPalindrome = (str) => {
    const cleanStr = str.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();
    return cleanStr === cleanStr.split('').reverse().join('');
};
const array1 = ["racecar", "hello", "level", "world", "deified"];
const palindromes = array1.filter(isPalindrome);
console.log(palindromes); 


// prime numbers in an array


const isPrime = (num) => {
    if (num <= 1) return false;
  if (num <= 3) return true;
    if (num % 2 === 0 || num % 3 === 0) return false;
    
    for (let i = 5; i * i <= num; i += 6) {
    if (num % i === 0 || num % (i + 2) === 0) return false;
    }

  return true;
};

const array = [2, 3, 4, 5, 6, 7, 8, 9, 10];

const primeNumbers = arrayfilter(isPrime);
  
  console.log(primeNumbers); 
};
